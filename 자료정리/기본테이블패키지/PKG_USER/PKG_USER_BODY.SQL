create or replace PACKAGE BODY PKG_USER AS

  PROCEDURE PROC_INS_USER
  (
    INS_USER_NAME IN VARCHAR2,
    INS_USER_AGE IN VARCHAR2,
    INS_USER_GENDER IN VARCHAR2,
    INS_USER_TEL IN VARCHAR2,
    INS_USER_ADDR_GRP IN VARCHAR2,
    INS_USER_ADDR IN VARCHAR2,
    INS_USER_ADDR2 IN VARCHAR2,
    INS_USER_ADDR3 IN VARCHAR2,
    INS_USER_POINT IN NUMBER,
    O_ERRCODE OUT VARCHAR2,
    O_ERRMSG OUT VARCHAR2
  ) AS
  V_NEW_USER_ID CHAR(6);
  BEGIN
    SELECT 'UI'||TO_CHAR(TO_NUMBER(SUBSTR(MAX(USER_ID),4,3))+1,'FM0000') INTO V_NEW_USER_ID FROM USER_TBL;
    
    INSERT INTO USER_TBL(USER_ID,USER_NAME,USER_AGE,GENDER,USER_TEL,USER_ADDR_GRP,USER_ADDR,USER_ADDR2,USER_ADDR3,USER_POINT) 
    VALUES(V_NEW_USER_ID,INS_USER_NAME,INS_USER_AGE,INS_USER_GENDER,INS_USER_TEL,INS_USER_ADDR_GRP,INS_USER_ADDR,INS_USER_ADDR2,INS_USER_ADDR3,INS_USER_POINT);
    
    EXCEPTION WHEN OTHERS THEN
    O_ERRCODE:=SQLCODE;
    O_ERRMSG:=SQLERRM;
    
  END PROC_INS_USER;



  PROCEDURE PROC_SEL_USER
  (
    INS_USER_ID IN VARCHAR2,
    INS_USER_NAME IN VARCHAR2,
    O_CUR OUT SYS_REFCURSOR
  ) AS
  BEGIN
    OPEN O_CUR FOR
    SELECT *FROM USER_TBL WHERE USER_ID LIKE '%'|| INS_USER_ID ||'%'
    AND USER_NAME LIKE '%' || INS_USER_NAME ;
  END PROC_SEL_USER;




  PROCEDURE PROC_UP_USER
  (
    INS_USER_ID IN VARCHAR2,
    INS_USER_NAME IN VARCHAR2,
    INS_USER_AGE IN VARCHAR2,
    INS_USER_GENDER IN VARCHAR2,
    INS_USER_TEL IN VARCHAR2,
    INS_USER_ADDR_GRP IN VARCHAR2,
    INS_USER_ADDR IN VARCHAR2,
    INS_USER_ADDR2 IN VARCHAR2,
    INS_USER_ADDR3 IN VARCHAR2,
    INS_USER_POINT IN NUMBER,
    O_ERRCODE OUT VARCHAR2,
    O_ERRMSG OUT VARCHAR2
  ) AS
  BEGIN
    
    UPDATE USER_TBL SET USER_ID=INS_USER_ID, USER_NAME=INS_USER_NAME, USER_AGE=INS_USER_AGE, GENDER=INS_USER_GENDER, USER_TEL=INS_USER_TEL, USER_ADDR_GRP=INS_USER_ADDR_GRP,
    USER_ADDR=INS_USER_ADDR, USER_ADDR2=INS_USER_ADDR2, USER_ADDR3=INS_USER_ADDR3, USER_POINT=INS_USER_POINT WHERE USER_ID=INS_USER_ID;
    
    EXCEPTION WHEN OTHERS THEN
    O_ERRCODE:=SQLCODE;
    O_ERRMSG:=SQLERRM;
    
  END PROC_UP_USER;




  PROCEDURE PROC_DEL_USER
    (
        INS_USER_ID IN VARCHAR2,
        O_ERRCODE OUT VARCHAR2,
        O_ERRMSG OUT VARCHAR2
    ) AS
    V_USER_CNT NUMBER(2);
    USER_EXCEPTION EXCEPTION;
  BEGIN
  
  SELECT DECODE(MAX(USER_ID),NULL,0,1)INTO V_USER_CNT FROM USER_TBL WHERE USER_ID=INS_USER_ID;
      IF V_USER_CNT=0 THEN
      RAISE USER_EXCEPTION;
      ELSE
      DELETE FROM USER_TBL WHERE USER_ID=INS_USER_ID;
      END IF;
      
--삭제할 유저가 존재하지않을때 경고문구출력
    EXCEPTION WHEN USER_EXCEPTION THEN
    O_ERRCODE:='ERR001';
    O_ERRMSG:='유저정보가 존재하지않습니다.';
    WHEN OTHERS THEN
    O_ERRCODE:=SQLCODE;
    O_ERRMSG:=SQLERRM;
    
  END PROC_DEL_USER;

END PKG_USER;