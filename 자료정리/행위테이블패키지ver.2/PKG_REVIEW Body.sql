create or replace NONEDITIONABLE PACKAGE BODY PKG_REVIEW AS

  --리뷰 등록 프로시저
  PROCEDURE PROC_INS_REVIEW
  (
    IN_ORDER_ID         IN VARCHAR2,
    IN_S_SCORE          IN VARCHAR2,
    IN_REVIEW_COMMENT   IN VARCHAR2,
    O_ERRCODE           OUT VARCHAR2,
    O_ERRMSG            OUT VARCHAR2
  ) AS
  
    V_NEW_REVIEW_ID     CHAR(6);
    V_USER_ID           CHAR(6);
    V_ORDER_STATUS      VARCHAR2(20);  
    CNT_ORDER_ID        NUMBER;
    
    ORDERID_DATA_EXCEPT EXCEPTION;
    STATUS_DATA_EXCEPT  EXCEPTION;
    S_SCORE_EXCEPT      EXCEPTION;
  
  BEGIN
  
    SELECT 'RI' || TO_CHAR(TO_NUMBER(SUBSTR(NVL(MAX(REVIEW_ID), 'RI0000'), 3, 4)) + 1, 'FM0000')
    INTO V_NEW_REVIEW_ID
    FROM REVIEW_TBL;
    
    --주문목록에 주문ID가 없는 경우
    SELECT COUNT(*)
    INTO CNT_ORDER_ID
    FROM ORDER_LIST_TBL
    WHERE ORDER_ID = IN_ORDER_ID;
    
    IF CNT_ORDER_ID = 0 THEN
        RAISE ORDERID_DATA_EXCEPT;
    END IF;
  
    --주문목록의 주문상태가 완료라면 리뷰 등록 가능
    SELECT MAX(ORDER_STATUS)
    INTO V_ORDER_STATUS
    FROM ORDER_LIST_TBL
    WHERE ORDER_ID = IN_ORDER_ID;
    
    IF V_ORDER_STATUS = '완료' THEN
    
        SELECT MAX(T2.USER_ID)
        INTO V_USER_ID
        FROM ORDER_LIST_TBL T1, ORDER_TBL T2
        WHERE T1.ORDER_ID = T2.ORDER_ID
        AND T1.ORDER_ID = IN_ORDER_ID;
        
        INSERT INTO REVIEW_TBL(REVIEW_ID,USER_ID,ORDER_ID,S_SCORE,REVIEW_DATE,REVIEW_COMMENT)
        VALUES(V_NEW_REVIEW_ID,V_USER_ID,IN_ORDER_ID,TO_NUMBER(IN_S_SCORE),TO_DATE(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'),IN_REVIEW_COMMENT);
        
    ELSE
        RAISE STATUS_DATA_EXCEPT;
    END IF;
    
    --리뷰평점 1점~5점 사이만 가능
    IF TO_NUMBER(IN_S_SCORE) > 5 THEN
        RAISE S_SCORE_EXCEPT;
    ELSIF TO_NUMBER(IN_S_SCORE) <= 0 THEN
        RAISE S_SCORE_EXCEPT;
    END IF;
    
    EXCEPTION
    WHEN ORDERID_DATA_EXCEPT THEN
    O_ERRCODE := 'ERR_ORDER_ID';
    O_ERRMSG := '주문목록에 해당 주문ID가 없습니다';
    ROLLBACK;
    
    WHEN STATUS_DATA_EXCEPT THEN
    O_ERRCODE := 'ERR_ORDER_STATUS';
    O_ERRMSG := '주문상태가 완료가 아닙니다';
    ROLLBACK;
    
    WHEN S_SCORE_EXCEPT THEN
    O_ERRCODE := 'ERR_S_SCORE';
    O_ERRMSG := '리뷰평점은 1점~5점 내 가능합니다';
    ROLLBACK;
    
    WHEN OTHERS THEN
    O_ERRCODE := SQLCODE;
    O_ERRMSG := SQLERRM;
    
  END PROC_INS_REVIEW;
  
  --리뷰 조회 프로시저
  PROCEDURE PROC_SEL_REVIEW
  (
    IN_USER_ID          IN VARCHAR2,
    IN_ORDER_ID         IN VARCHAR2,
    IN_S_SCORE          IN VARCHAR2,
    IN_REVIEW_DATE      IN VARCHAR2,
    O_CUR               OUT SYS_REFCURSOR,
    O_ERRCODE           OUT VARCHAR2,
    O_ERRMSG            OUT VARCHAR2
  ) AS
  
  BEGIN
    
    OPEN O_CUR FOR
    SELECT *
    FROM REVIEW_TBL
    WHERE USER_ID LIKE '%' || IN_USER_ID || '%'
    AND ORDER_ID LIKE '%' || IN_ORDER_ID || '%'
    AND S_SCORE LIKE '%' || IN_S_SCORE || '%'
    AND REVIEW_DATE LIKE '%' || TO_DATE(IN_REVIEW_DATE, 'YYYY-MM-DD HH24:MI:SS') || '%'
    ;
    
    EXCEPTION
    WHEN OTHERS THEN
    O_ERRCODE := SQLCODE;
    O_ERRMSG := SQLERRM;
    
  END PROC_SEL_REVIEW;
  
  --리뷰 수정 프로시저
  PROCEDURE PROC_UP_REVIEW
  (
    IN_REVIEW_ID        IN VARCHAR,
    IN_USER_ID          IN VARCHAR2,
    IN_ORDER_ID         IN VARCHAR2,
    IN_S_SCORE          IN VARCHAR2,
    IN_REVIEW_COMMENT   IN VARCHAR2,
    O_ERRCODE           OUT VARCHAR2,
    O_ERRMSG            OUT VARCHAR2
  ) AS
  
    S_SCORE_EXCEPT      EXCEPTION;
  
  BEGIN
    
    UPDATE REVIEW_TBL
    SET S_SCORE = IN_S_SCORE,
        REVIEW_DATE = TO_DATE(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'),
        REVIEW_COMMENT = IN_REVIEW_COMMENT
    WHERE REVIEW_ID = IN_REVIEW_ID
    AND USER_ID = IN_USER_ID
    AND ORDER_ID = IN_ORDER_ID;
    
    --리뷰평점 1점~5점 사이만 가능
    IF TO_NUMBER(IN_S_SCORE) > 5 THEN
        RAISE S_SCORE_EXCEPT;
    ELSIF TO_NUMBER(IN_S_SCORE) <= 0 THEN
        RAISE S_SCORE_EXCEPT;
    END IF;
    
    EXCEPTION
    WHEN S_SCORE_EXCEPT THEN
    O_ERRCODE := 'ERR_S_SCORE';
    O_ERRMSG := '리뷰평점은 1점~5점 내 가능합니다';
    ROLLBACK;
    
    WHEN OTHERS THEN
    O_ERRCODE := SQLCODE;
    O_ERRMSG := SQLERRM;
    
  END PROC_UP_REVIEW;
  
  --리뷰 삭제 프로시저
  PROCEDURE PROC_DEL_REVIEW
(
    INS_IDX IN INTEGER,
    O_ERRCODE OUT VARCHAR2,
    O_ERRMSG OUT VARCHAR2
) AS
    USER_REVIEW_CNT NUMBER(1);
    
    USER_PHOTO_EXCEPTION EXCEPTION;
    USER_REVIEW_EXCEPTION EXCEPTION;
  BEGIN
    SELECT DECODE(MAX(REVIEW_ID),NULL,0,1)INTO USER_REVIEW_CNT FROM REVIEW_TBL WHERE REVIEW_ID=INS_IDX;
    IF USER_REVIEW_CNT=0 THEN
    RAISE USER_PHOTO_EXCEPTION;
    RAISE USER_REVIEW_EXCEPTION;
    ELSE
    DELETE PHOTO_TBL A WHERE EXISTS(SELECT 1 FROM REVIEW_TBL B WHERE A.REVIEW_ID=B.REVIEW_ID AND A.REVIEW_ID=INS_IDX);--사진데이터삭제
    DELETE REVIEW_TBL WHERE REVIEW_ID=INS_IDX;--리뷰데이터삭제
    END IF;
    
    EXCEPTION WHEN USER_PHOTO_EXCEPTION THEN
    O_ERRCODE:='ERR001';
    O_ERRMSG:='사진데이터가없습니다';
    WHEN USER_REVIEW_EXCEPTION THEN
    O_ERRCODE:='ERR002';
    O_ERRMSG:='리뷰데이터가없습니다';
    WHEN OTHERS THEN
    O_ERRCODE:=SQLCODE;
    O_ERRMSG:=SQLERRM;
    
  END PROC_DEL_REVIEW;
  
  --리뷰테이블에 별점을매기면 가게별점에 반영 --점수는들어가는데 평균내는건아직못함
    PROCEDURE PROC_UP_SCORE
    AS 
    BEGIN

    FOR I IN
    (
          SELECT STORE_ID,COUNT(CNT) AS CCNT,SUM(S_SCORE) AS SUMSCORE FROM
          (  
                SELECT STORE_ID,USER_ID,S_SCORE,COUNT(*)AS CNT FROM
                (
                    SELECT  T1.ORDER_ID,T3.STORE_ID,T2.S_SCORE,T2.USER_ID FROM ORDER_LIST_TBL T1, REVIEW_TBL T2,ORDER_TBL T3
                    WHERE T1.ORDER_ID=T2.ORDER_ID AND T1.ORDER_ID=T3.ORDER_ID AND T2.ORDER_ID=T3.ORDER_ID AND T1.ORDER_STATUS='완료'
                )GROUP BY STORE_ID,USER_ID,S_SCORE
          )GROUP BY STORE_ID
    )
    LOOP
        UPDATE STORE_TBL SET STORE_SCORE=I.SUMSCORE/I.CCNT WHERE STORE_ID=I.STORE_ID;
    END LOOP;
    END PROC_UP_SCORE;

END PKG_REVIEW;